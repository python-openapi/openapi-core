[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
source =["openapi_core"]

[tool.coverage.xml]
output = "reports/coverage.xml"

[tool.mypy]
files = "openapi_core"
strict = true

[[tool.mypy.overrides]]
module = [
    "asgiref.*",
    "django.*",
    "falcon.*",
    "isodate.*",
    "jsonschema.*",
    "more_itertools.*",
    "parse.*",
    "requests.*",
    "werkzeug.*",
]
ignore_missing_imports = true

[tool.poetry]
name = "openapi-core"
version = "0.17.1"
description = "client-side and server-side support for the OpenAPI Specification v3"
authors = ["Artur Maciag <maciag.artur@gmail.com>"]
license = "BSD-3-Clause"
readme = "README.rst"
repository = "https://github.com/python-openapi/openapi-core"
documentation = "https://openapi-core.readthedocs.io"
keywords = ["openapi", "swagger", "schema"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries"
]
include = [
    {path = "tests", format = "sdist"},
]

[tool.poetry.dependencies]
python = "^3.7.0"
django = {version = ">=3.0", optional = true}
falcon = {version = ">=3.0", optional = true}
flask = {version = "*", optional = true}
isodate = "*"
more-itertools = "*"
parse = "*"
openapi-schema-validator = "^0.4.2"
openapi-spec-validator = "^0.5.0"
requests = {version = "*", optional = true}
werkzeug = "*"
typing-extensions = "^4.3.0"
jsonschema-spec = "^0.1.1"
backports-cached-property = {version = "^1.0.2", python = "<3.8" }
asgiref = "^3.6.0"
jsonschema = "^4.17.3"
starlette = "^0.26.1"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-immaterial"]
django = ["django"]
falcon = ["falcon"]
flask = ["flask"]
requests = ["requests"]
starlette = ["starlette", "httpx"]

[tool.poetry.dev-dependencies]
black = "^23.3.0"
django = ">=3.0"
djangorestframework = "^3.11.2"
falcon = ">=3.0"
flask = "*"
isort = "^5.11.5"
pre-commit = "*"
pytest = "^7"
pytest-flake8 = "*"
pytest-cov = "*"
responses = "*"
strict-rfc3339 = "^0.7"
webob = "*"
mypy = "^1.2"
httpx = "^0.24.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^5.3.0"
sphinx-immaterial = "^0.11.0"

[tool.pytest.ini_options]
addopts = """
--capture=no
--verbose
--showlocals
--junitxml=reports/junit.xml
--cov=openapi_core
--cov-report=term-missing
--cov-report=xml
"""

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79
force_single_line = true
